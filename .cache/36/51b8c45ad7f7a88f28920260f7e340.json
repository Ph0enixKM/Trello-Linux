{"id":"main.js","dependencies":[{"name":"/home/phoenix/Desktop/Projects/Trello-Linux/package.json","includedInParent":true,"mtime":1591529740112},{"name":"electron","loc":{"line":1,"column":39},"parent":"/home/phoenix/Desktop/Projects/Trello-Linux/src/main.js","resolved":"/home/phoenix/Desktop/Projects/Trello-Linux/node_modules/electron/index.js"},{"name":"fs","loc":{"line":2,"column":19},"parent":"/home/phoenix/Desktop/Projects/Trello-Linux/src/main.js","resolved":"/home/phoenix/Desktop/Projects/Trello-Linux/node_modules/parcel/src/builtins/_empty.js"}],"generated":{"js":"var _require = require('electron'),\n    app = _require.app,\n    BrowserWindow = _require.BrowserWindow;\n\nvar fs = require('fs');\n\nconsole.log(fs.existsSync('/home')); // function createWindow () {\n//   // Create the browser window.\n//   const win = new BrowserWindow({\n//     width: 800,\n//     height: 600,\n//     webPreferences: {\n//       nodeIntegration: true\n//     }\n//   })\n//   // and load the index.html of the app.\n//   win.loadFile('render/index.html')\n//   // Open the DevTools.\n//   win.webContents.openDevTools()\n// }\n// // This method will be called when Electron has finished\n// // initialization and is ready to create browser windows.\n// // Some APIs can only be used after this event occurs.\n// app.whenReady().then(createWindow)\n// // Quit when all windows are closed.\n// app.on('window-all-closed', () => {\n//   // On macOS it is common for applications and their menu bar\n//   // to stay active until the user quits explicitly with Cmd + Q\n//   if (process.platform !== 'darwin') {\n//     app.quit()\n//   }\n// })"},"sourceMaps":{"js":{"mappings":[{"name":"require","generated":{"line":1,"column":15},"source":"main.js","original":{"line":1,"column":31}},{"generated":{"line":1,"column":22},"source":"main.js","original":{"line":1,"column":38}},{"generated":{"line":1,"column":23},"source":"main.js","original":{"line":1,"column":39}},{"generated":{"line":1,"column":33},"source":"main.js","original":{"line":1,"column":38}},{"name":"app","generated":{"line":2,"column":4},"source":"main.js","original":{"line":1,"column":8}},{"name":"app","generated":{"line":2,"column":19},"source":"main.js","original":{"line":1,"column":8}},{"name":"BrowserWindow","generated":{"line":3,"column":4},"source":"main.js","original":{"line":1,"column":13}},{"name":"BrowserWindow","generated":{"line":3,"column":29},"source":"main.js","original":{"line":1,"column":13}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"name":"fs","generated":{"line":5,"column":4},"source":"main.js","original":{"line":2,"column":6}},{"generated":{"line":5,"column":6},"source":"main.js","original":{"line":2,"column":8}},{"name":"require","generated":{"line":5,"column":9},"source":"main.js","original":{"line":2,"column":11}},{"generated":{"line":5,"column":16},"source":"main.js","original":{"line":2,"column":18}},{"generated":{"line":5,"column":17},"source":"main.js","original":{"line":2,"column":19}},{"generated":{"line":5,"column":21},"source":"main.js","original":{"line":2,"column":18}},{"generated":{"line":5,"column":22},"source":"main.js","original":{"line":2,"column":0}},{"name":"console","generated":{"line":7,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":7},"source":"main.js","original":{"line":4,"column":7}},{"name":"log","generated":{"line":7,"column":8},"source":"main.js","original":{"line":4,"column":8}},{"generated":{"line":7,"column":11},"source":"main.js","original":{"line":4,"column":0}},{"name":"fs","generated":{"line":7,"column":12},"source":"main.js","original":{"line":4,"column":12}},{"generated":{"line":7,"column":14},"source":"main.js","original":{"line":4,"column":14}},{"name":"existsSync","generated":{"line":7,"column":15},"source":"main.js","original":{"line":4,"column":15}},{"generated":{"line":7,"column":25},"source":"main.js","original":{"line":4,"column":12}},{"generated":{"line":7,"column":26},"source":"main.js","original":{"line":4,"column":26}},{"generated":{"line":7,"column":33},"source":"main.js","original":{"line":4,"column":12}},{"generated":{"line":7,"column":34},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":37},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":11,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":20,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":23,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":35,"column":0}}],"sources":{"main.js":"const { app, BrowserWindow } = require('electron')\nconst fs = require('fs')\n\nconsole.log(fs.existsSync('/home'))\n\n// function createWindow () {\n//   // Create the browser window.\n//   const win = new BrowserWindow({\n//     width: 800,\n//     height: 600,\n//     webPreferences: {\n//       nodeIntegration: true\n//     }\n//   })\n\n//   // and load the index.html of the app.\n//   win.loadFile('render/index.html')\n\n//   // Open the DevTools.\n//   win.webContents.openDevTools()\n// }\n\n// // This method will be called when Electron has finished\n// // initialization and is ready to create browser windows.\n// // Some APIs can only be used after this event occurs.\n// app.whenReady().then(createWindow)\n\n// // Quit when all windows are closed.\n// app.on('window-all-closed', () => {\n//   // On macOS it is common for applications and their menu bar\n//   // to stay active until the user quits explicitly with Cmd + Q\n//   if (process.platform !== 'darwin') {\n//     app.quit()\n//   }\n// })"},"lineCount":null}},"error":null,"hash":"ffb2d360e6a2afa9af1cf9e629adace1","cacheData":{"env":{}}}